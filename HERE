My device: Android
Termux version: 0.118.1
Termux:API: yes
Android: 13
Root: No
Model: Samsung A12
DPI: 501
Termux: Fdroid
Termux:API: Fdroid
Download Fdroid: https://trashbox.ru/link/f-droid-android
Discord: https://discord.com/invite/AqEVwnTGDN

Termux packages & instalatuon⬇️
(Example. python: pkg ...)
1. Update: pkg update
2. Upgrade: pkg upgrade
3. (apt): apt update
4. (apt): apt upgrade
5. (continue) upgrading recomended packages:
(A) - apt
(B) - ca-certificates
(C) - command-not-found
(D) - debianutils
(E) - less
(F) - libandroid-support
(G) - libgcrypt
(H) - liblz4
(I) - libnghttp3
(J) - libunbound
(K) - patch
(L) - termux-keyring
Their full name and description with version:
A = apt/stable 2.7.14-1 aarch64 [upgradable from: 2.7.14]
B = ca-certificates/stable 1:2024.07.02 all [upgradable from: 1:2024.03.11-2]
C = command-not-found/stable 2.4.0-33 aarch64 [upgradable from: 2.4.0-29]
D = debianutils/stable 5.20 aarch64 [upgradable from: 5.19]
E = less/stable 661 aarch64 [upgradable from: 633-1]
F = libandroid-support/stable 29 aarch64 [upgradable from: 28-3]
G = libgcrypt/stable 1.10.3-1 aarch64 [upgradable from: 1.10.3]
H = liblz4/stable 1.9.4-1 aarch64 [upgradable from: 1.9.4]
I = libnghttp3/stable 1.4.0 aarch64 [upgradable from: 1.3.0]
J = libunbound/stable 1.20.0-1 aarch64 [upgradable from: 1.20.0]
K = patch/stable 2.7.6-4 aarch64 [upgradable from: 2.7.6-3]
L = termux-keyring/stable 3.12-1 all [upgradable from:3.12]

Full Termux instalation process, just copy these commands and paste in Termux terminal and if it ask for "Y or N", "Y, N, O, D" or whatever, choose only "Y".
1. termux-setup-storage
  - allow the permission
2. pkg update
3. pkg upgrade
4. (if after "pkg update" it says "12 packages can be upgraded. Run 'apt list --upgradable' to see them.", ignore it)
5. pkg install apt
6. pkg install ca-certificates
7. pkg install command-not-found
8. pkg install debianutils
9. pkg install less
10. pkg install libandroid-support
11. pkg install libgcrypt
12. pkg install liblz4
13. pkg install libnghttp3
14. pkg install libunbound
15. pkg install patch
16. pkg install termux-keyring
17. apt update
18. apt upgrade
19. pkg up -y
20. apt install git
21. pkg install wget
22. pkg install python
23. pkg install python2
24. pkg install python3
25. pkg update
Or run by a single command:
termux-setup-storage && pkg update && pkg upgrade && pkg install apt && pkg install ca-certificates && pkg install command-not-found && pkg install debianutils && pkg install less && pkg install libandroid-support && pkg install libgcrypt && pkg install liblz4 && pkg install libnghttp3 && pkg install libunbound && pkg install patch && pkg install termux-keyring && apt update && apt upgrade && pkg up -y && apt install git && pkg install wget && pkg install python && pkg install python2 && pkg install python3 && pkg update

If you still get this message "<number> packages can be upgraded. Run 'apt list --upgradable' to see them.", create a ticket in discord server or issue with description and image.
Last step is to install the editor, i will use vim but you can use any orther.
Instalation vim and C++
- pkg install clang
- pkg install cmake
- pkg install make
- pkg install g++
- pkg install ndk-sysroot

Error possible:
- E: Unable to locate package g+

Resolvation:
Run this command
- pkg install gcc
And if im right, will be write a word like this "libllvm" then run this command
- pkg install libllvm

Next, we will install vim.
To do that, run this command
- pkg install vim

Next, to create a hello world first program
- vim hello.cpp

Which cpp is the file used for C++ language

Once we are in the editor, press "I" to write and write(i recomend that) or copy this code
#include <iostream>

int main() {
    std::cout << "Hello, World!" << std::endl;
    return 0;
}

Now, to save and exit press ESC and type :wq (and press enter if you didn't)
After that, we need to compile the program using clang for it
- clang++ hello.cpp -o hello

To run, do this command
- ./hello

Congratulations, you completed the guide.

Compilling explaination:
clang++ = compile command
hello.cpp = file we created
-o = (o, not zero) compilling 
hello = file compilled

after that we just run:
./hello
